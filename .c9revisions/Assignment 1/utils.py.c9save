{"ts":1351718769704,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"import itertools\nimport numpy as np\nfrom numpy import genfromtxt\nimport urllib2\nimport urllib\nimport datetime\nimport os\n\n'''\nDownloads the equities imformation from Yahoo Finance\n'''\ndef yahoo_pull(data_path, symbols, start_date, end_date=None):\n    #Create path if it doesn't exist\n    if not (os.access(data_path, os.F_OK)):\n        os.makedirs(data_path)\n\n    #utils.clean_paths(data_path)\n\n    if end_date == None:\n        end_date = datetime.datetime.now()\n\n    miss_ctr = 0  # Counts how many symbols we could not get\n    for symbol in symbols:\n        symbol_name = symbol\n        if symbol[0] == '$':\n            symbol = '^' + symbol[1:]\n\n        symbol_data = list()\n        print \"Getting: \" + str (symbol_name)\n\n        try:\n            params = urllib.urlencode({\n                                        's': str(symbol),\n                                        'a': start_date.month - 1, 'b': start_date.day, 'c': start_date.year,\n                                        'd': end_date.month - 1, 'e': end_date.day, 'f': end_date.year\n                                    })\n            url_get = urllib2.urlopen(\"http://ichart.finance.yahoo.com/table.csv?%s\" % params)\n\n            header = url_get.readline()\n            symbol_data.append(url_get.readline())\n            while (len(symbol_data[-1]) > 0):\n                symbol_data.append(url_get.readline())\n\n            symbol_data.pop(-1)  # The last element is going to be the string of length zero. We don't want to write that to file.\n            # now writing data to file\n            f = open(data_path + symbol_name + \".csv\", 'w')\n\n            #Writing the header\n            f.write(header)\n\n            while (len(symbol_data) > 0):\n                f.write(symbol_data.pop(0))\n\n            f.close()\n            print \"Done: \" + str (symbol_name)\n\n        except urllib2.HTTPError:\n            miss_ctr = miss_ctr + 1\n            print \"Unable to fetch data for stock: \" + str(symbol_name)\n        except urllib2.URLError:\n            print \"URL Error for stock: \" + str(symbol_name)\n\n    print \"All done. Got \" + str(len(symbols) - miss_ctr) + \" stocks. Could not get \" + str(miss_ctr) + \" stocks.\"\n\n\n'''\nGet the data of a symbol\n'''\ndef get_data(symbol):\n    return genfromtxt('./data/%s.csv' % symbol, delimiter=',', skip_header=1)\n\n'''\nGet only the close column of a symbol\n'''\ndef get_close(symbol):\n    return get_data(symbol)[:, 6][::-1]  # Reverse\n\n'''\nCalculates the daily return for an array\nReturns: An array with every return\n'''\ndef daily_return(close):\n    daily_ret = 0  # First return is 0\n    for i in range(len(close)):\n        if i != 0:\n            ret = (close[i] / close[i - 1]) - 1\n            daily_ret = np.append(daily_ret, ret)\n\n    return daily_ret\n\n'''\nCalculates the anual return for an array\nReturns: int with the return\n'''\ndef anual_return(close):\n    return close[len(close) - 1] / close[0] - 1\n\n'''\nCalculates the cumulative return for an array\nReturns: array with each cumulative return\n'''\ndef cumulative_return(close):\n    init_val = close[0]\n    cum_ret = 1  # First return is 100%\n    for i in range(len(close)):\n        if i != 0:\n            ret = (close[i] / init_val)\n            cum_ret = np.append(cum_ret, ret)\n\n    return cum_ret\n\n'''\nCalculates the average daily return of an array\nReturn: int with the avg\n'''\ndef avg_daily_return(close):\n    return np.average(daily_return(close))\n\n'''\nCalculates the standar deviation of the daily return of an array\nReturn: int with the std\n'''\ndef std_daily_return(close):\n    return np.std(daily_return(close), dtype=np.float64)\n\n'''\nCalculates the sharpe ratio of an array\nReturn: int with the sharpe ratio\n'''\ndef sharpe_ratio(close):\n    day = daily_return(close)\n    avg = np.average(day)\n    std = np.std(day, dtype=np.float64)\n    return np.sqrt(252) * avg / std\n\n'''\nReads a .txt file and returns the symbols from that file\n'''\ndef read_symbols(s_symbols_file):\n    symbols = []\n    file = open(s_symbols_file, 'r')\n    for f in file.readlines():\n        symbols.append(f.strip())\n    file.close()\n\n    return symbols\n\nif __name__ == '__main__':\n    symbols = read_symbols('symbolsSPY.txt')\n    symbols = ['CNC', 'TRGP', 'ROST', 'OKE', 'HUM', 'VFC', 'BIIB', 'MA', 'EP', 'WCG']\n    symbols = read_symbols('symbols.txt')\n    start_date = datetime.date(2011, 1, 1)\n    end_date = datetime.date(2011, 12, 31)\n    yahoo_pull('./data/', symbols, start_date, end_date)"]],"start1":0,"start2":0,"length1":0,"length2":4433}]],"length":4433}
{"contributors":[],"silentsave":false,"ts":1351718780942,"patch":[[{"diffs":[[0,"mbols.txt')\n"],[1,"    symbols = ['ROST', 'OKE', 'BIIB', 'GLD'] # Best from previous symbols\n"],[0,"    start_da"]],"start1":4279,"start2":4279,"length1":24,"length2":98},{"diffs":[[0,"nd_date)"],[1,"\n    \n    \n    \n    \n    \n    \n    \n    \n    "]],"start1":4499,"start2":4499,"length1":8,"length2":53}]],"length":4552,"saved":false}
{"ts":1351718811270,"patch":[[{"diffs":[[0,"ain__':\n    "],[1,"#"],[0,"symbols = re"]],"start1":4110,"start2":4110,"length1":24,"length2":25}]],"length":4553,"saved":false}
{"ts":1351718820455,"patch":[[{"diffs":[[0," 'WCG']\n    "],[1,"#"],[0,"symbols = re"]],"start1":4242,"start2":4242,"length1":24,"length2":25}]],"length":4554,"saved":false}
{"ts":1351718916765,"patch":[[{"diffs":[[0,"  \n    \n    \n   "],[1,"\n   \n   \n   \n   \n   \n   \n   \n   \n  "],[0," \n    \n    \n    "]],"start1":4522,"start2":4522,"length1":32,"length2":67}]],"length":4589,"saved":false}
{"ts":1351719146379,"patch":[[{"diffs":[[0,"symbols\n"],[1,"    symbols = ['HDGE', 'AGOL', 'FANO', 'GGGG' ,'SDIV', 'FWDB', 'NKY'] # Best from previous symbols\n"],[0,"    star"]],"start1":4359,"start2":4359,"length1":16,"length2":115}]],"length":4688,"saved":false}
{"ts":1351719174825,"patch":[[{"diffs":[[0,"OL',"],[-1," 'FANO',"],[0," 'GG"]],"start1":4393,"start2":4393,"length1":16,"length2":8},{"diffs":[[0," # Best "],[1,"EFT "],[0,"from "],[-1,"previous symbols"],[1,"a site"],[0,"\n    sta"]],"start1":4428,"start2":4428,"length1":37,"length2":31}]],"length":4674,"saved":false}
{"contributors":[],"silentsave":false,"ts":1351727330233,"patch":[[{"diffs":[[0,"mtxt\nimport "],[-1,""],[0,""],[1,"matplotlib.mlab as mlab\nimport "],[0,"urllib2\nimpo"]],"start1":60,"start2":60,"length1":24,"length2":55},{"diffs":[[0,"uities i"],[-1,"m"],[1,"n"],[0,"formatio"]],"start1":172,"start2":172,"length1":17,"length2":17},{"diffs":[[0,"oo_pull("],[-1,"data_path, "],[0,"symbols,"]],"start1":221,"start2":221,"length1":27,"length2":16},{"diffs":[[0,"ate=None"],[1,", data_path='./data/'"],[0,"):\n    #"]],"start1":255,"start2":255,"length1":16,"length2":37},{"diffs":[[0,"data of a symbol"],[1," already downloaded"],[0,"\n'''\ndef get_dat"]],"start1":2232,"start2":2232,"length1":32,"length2":51},{"diffs":[[0,"ta(symbol):\n    "],[1,"#"],[0,"return genfromtx"]],"start1":2282,"start2":2282,"length1":32,"length2":33},{"diffs":[[0,"eader=1)"],[1,"\n    return mlab.csv2rec('./data/%s.csv' % symbol)[::-1] # Reverse"],[0,"\n\n'''\nGe"]],"start1":2364,"start2":2364,"length1":16,"length2":82},{"diffs":[[0,"bol)"],[-1,"[:, 6][::-1]"],[1,".adj_close\n\n'''\nCompletes the data for missing records\nSaves the new files\n'''\ndef complete_data(symbols):\n    for symbol in symbols:\n        complete_data_single(symbol, saveNewFile=True)\n\n'''\nCompletes the data for missing records can return the array or \nsave a new file\n'''\ndef complete_data_single(symbol, saveNewFile=False):\n    good_dates = get_data(\"SPY\").date\n    data = get_data(symbol)\n    dates = data.date\n    \n    # First check if the records from the first days are missing\n    # and fill this data with the record found\n    if not(good_dates[0] in dates):\n        # First find the most recent values that is on the data\n        open_val = data[0][1]\n        high = data[0][2]\n        low = data[0][3]\n        close = data[0][4]\n        volume = data[0][5]\n        adj_close = data[0][6]\n        \n        # Then add that record to the beginning until data starts\n        # it is necesary to modify the date\n        i = 0\n        while not(good_dates[i] in dates):\n            new = (good_dates[i], open_val, high, low, close, volume, adj_close)\n            #n = np.array(most_recent, dtype=data.dtype)\n            data = np.insert(data, i, new, 0)  \n            i = i + 1\n\n "],[0,"  "],[1," "],[0,"# "],[-1,"Reverse"],[1,"TODO: Missing values not onthe beginning\n\n    if saveNewFile:\n        try:\n            os.remove('./data/%s - old.csv' % symbol)\n        except:\n            pass\n        os.rename('./data/%s.csv' % symbol, './data/%s - old.csv' % symbol)\n        mlab.rec2csv(data, './data/%s.csv' % symbol, delimiter=',')\n\n    return data\n        "],[0,"\n\n''"]],"start1":2532,"start2":2532,"length1":31,"length2":1533},{"diffs":[[0,"ain__':\n    "],[-1,"#"],[0,"symbols = re"]],"start1":5739,"start2":5739,"length1":25,"length2":24},{"diffs":[[0,"'symbols"],[-1,"SPY"],[0,".txt')\n "]],"start1":5774,"start2":5774,"length1":19,"length2":16},{"diffs":[[0,"G']\n"],[-1,"    #symbols = read_symbols('symbols.txt')\n    symbols = ['ROST', 'OKE', 'BIIB', 'GLD'] # Best from previous symbols\n"],[0,"    "]],"start1":5871,"start2":5871,"length1":125,"length2":8},{"diffs":[[0,"ull("],[-1,"'./data/', "],[0,"symb"]],"start1":6057,"start2":6057,"length1":19,"length2":8},{"diffs":[[0,"    "],[-1,"\n    \n    \n    \n    \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n    \n    \n    "],[1,"complete_data(symbols)"]],"start1":6092,"start2":6092,"length1":79,"length2":26}]],"length":6118,"saved":false}
{"ts":1351727331122,"patch":[[{"diffs":[[0,")\n    complete_data(symbols)"],[1,"\n    \n    "]],"start1":6090,"start2":6090,"length1":28,"length2":38}]],"length":6128,"saved":false}
{"ts":1351727339199,"patch":[[{"diffs":[[0,"ain__':\n    "],[1,"#"],[0,"symbols = re"]],"start1":5739,"start2":5739,"length1":24,"length2":25}]],"length":6129,"saved":false}
{"ts":1351727350243,"patch":[[{"diffs":[[0,"bols = ["],[1,"'SPY', "],[0,"'HDGE', "]],"start1":5883,"start2":5883,"length1":16,"length2":23}]],"length":6136,"saved":false}
{"ts":1351727376974,"patch":[[{"diffs":[[0,"31)\n    "],[1,"#"],[0,"yahoo_pu"]],"start1":6050,"start2":6050,"length1":16,"length2":17}]],"length":6137,"saved":false}
{"ts":1351727381969,"patch":[[{"diffs":[[0," = ["],[-1,"'SPY', "],[0,"'HDG"]],"start1":5887,"start2":5887,"length1":15,"length2":8}]],"length":6130,"saved":false}
